1  - if no <argv> and no $HOME : implementation defined

2  - if no <argv> and $HOME : act as if <argv> = $HOME

3  - if <argv> begin with '/' : set curpath to <argv> and go to 7

4  - if <argv> begin with ".." : go to 6

/!\ POSIX to eclaircir --> if <argv> not in path, check in CDPATHs
( bash : CDPATH first ; zsh : ./ first )
5  - try 1st value of CDPATH/<argv> ;Â then try ./<argv> ; then try rest of CDPATH
		set result to curpath and go to 7

(6 - set curpath to <argv>)

7  - if -P, go to 10. if *curpath != '/', set curpath to "(pwd)/curpath"

8  - convert curpath to canonical form :
		- 'dot' component removed
		- for 'dot-dot' if there's a prev component and it isn't root or ..
			- if prev component is not a directory, output an error and exit
			- else remove '../' from path
		- implementation may simplify path ('///dir/fold//final' -> '/dir/fold/final')
		- if curpath is null, exit

9  - if curpath > PATH_MAX but <argv> < PATH_MAX ; convert curtpath to relative path
	( convertion alway possible if (pwd)/ is 'an initial substring' of curpath )
	( eventually same if curpath < PATH_MAX but <argv> > PATH_MAX )

10 - now chdir(curpath)
		- if no -P, export PWD=(curpath before 9)
		- if -P, export PWD=(pwd -P) [?]
		- if no perm or xx, PWD=(blank)


and if <argv> = '-' ; go to $OLDPWD if it is
